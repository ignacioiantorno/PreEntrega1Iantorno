{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Personal\\\\OneDrive\\\\Documentos\\\\myecommerce\\\\src\\\\components\\\\ItemListContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Item from './Item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemListContainer = () => {\n  _s();\n  let {\n    id\n  } = useParams();\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    // Aquí normalmente harías una llamada a una API o algo similar para obtener tus items\n    // Pero por ahora, vamos a simularlo con un array de objetos\n    const mockItems = [{\n      id: '1',\n      title: 'Artículo 1',\n      image: 'url_de_imagen'\n    }, {\n      id: '2',\n      title: 'Artículo 2',\n      image: 'url_de_imagen'\n    }\n    // Agrega aquí los otros 6 items...\n    ];\n\n    setItems(mockItems);\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: items.map(item => /*#__PURE__*/_jsxDEV(Item, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 26\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemListContainer, \"9lRCXEPiE8ePG85F10Ea2Q12wGs=\", false, function () {\n  return [useParams];\n});\n_c = ItemListContainer;\nexport default ItemListContainer;\nvar _c;\n$RefreshReg$(_c, \"ItemListContainer\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Item","jsxDEV","_jsxDEV","ItemListContainer","_s","id","items","setItems","mockItems","title","image","children","map","item","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Personal/OneDrive/Documentos/myecommerce/src/components/ItemListContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Item from './Item';\r\n\r\nconst ItemListContainer = () => {\r\n  let { id } = useParams();\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Aquí normalmente harías una llamada a una API o algo similar para obtener tus items\r\n    // Pero por ahora, vamos a simularlo con un array de objetos\r\n    const mockItems = [\r\n      { id: '1', title: 'Artículo 1', image: 'url_de_imagen' },\r\n      { id: '2', title: 'Artículo 2', image: 'url_de_imagen' },\r\n      // Agrega aquí los otros 6 items...\r\n    ];\r\n\r\n    setItems(mockItems);\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      {items.map(item => <Item key={item.id} item={item} />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemListContainer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,IAAI;IAAEC;EAAG,CAAC,GAAGN,SAAS,EAAE;EACxB,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMW,SAAS,GAAG,CAChB;MAAEH,EAAE,EAAE,GAAG;MAAEI,KAAK,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAgB,CAAC,EACxD;MAAEL,EAAE,EAAE,GAAG;MAAEI,KAAK,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAgB;IACvD;IAAA,CACD;;IAEDH,QAAQ,CAACC,SAAS,CAAC;EACrB,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,oBACEH,OAAA;IAAAS,QAAA,EACGL,KAAK,CAACM,GAAG,CAACC,IAAI,iBAAIX,OAAA,CAACF,IAAI;MAAea,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACR,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAgB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClD;AAEV,CAAC;AAAAb,EAAA,CArBKD,iBAAiB;EAAA,QACRJ,SAAS;AAAA;AAAAmB,EAAA,GADlBf,iBAAiB;AAuBvB,eAAeA,iBAAiB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}